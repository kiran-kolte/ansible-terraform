---
- name: Terraform operations
  hosts: localhost
  gather_facts: false
  become: false

  environment:
    ARM_TENANT_ID: "{{ lookup('ansible.builtin.env', 'AZURE_TENANT') }}"
    ARM_SUBSCRIPTION_ID: "{{ lookup('ansible.builtin.env', 'AZURE_SUBSCRIPTION_ID') }}"
    ARM_CLIENT_ID: "{{ lookup('ansible.builtin.env', 'AZURE_CLIENT_ID') }}"
    ARM_CLIENT_SECRET: "{{ lookup('ansible.builtin.env', 'AZURE_SECRET') }}"

  vars:
    tf_project_dir: "{{ playbook_dir | dirname }}"
    tf_project_key: az_web_demo # this is used to identify the remote state in blob storage
    backend_conf: "{{ lookup('ansible.builtin.env', 'TF_BACKEND_CONFIG_FILE') }}"


  tasks:
    - name: Terraform apply | create_web_demo
      cloud.terraform.terraform:
        project_path: "{{ tf_project_dir }}"
        state: present
        force_init: true
        backend_config:
          key: "{{ tf_project_key }}"
        backend_config_files:
          - "{{ backend_conf }}"
        variables:
          web_demo_ssh_pubkey: "{{ az_ssh_pubkey }}"

    - name: Terraform destroy | create_web_demo
      tags: [never, remove]
      cloud.terraform.terraform:
        project_path: "{{ tf_project_dir }}"
        state: absent
        force_init: true
        backend_config:
          key: "{{ tf_project_key }}"
        backend_config_files:
          - "{{ backend_conf }}"
